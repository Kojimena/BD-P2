definitions:
  controllers.DeleteRelationsInput:
    properties:
      nombre:
        description: Nombre del nodo de la relación
        type: string
      relation:
        description: Relación a eliminar
        type: string
      usuario:
        description: Usuario de la persona
        type: string
    required:
    - nombre
    - relation
    - usuario
    type: object
  controllers.DeleteSongRememberPropertyInput:
    properties:
      cancion:
        type: string
      usuario:
        type: string
    required:
    - cancion
    - usuario
    type: object
  controllers.DeleteUsersInput:
    properties:
      users:
        description: Usuarios a eliminar
        items:
          type: string
        type: array
    required:
    - users
    type: object
  controllers.NewPublicationInput:
    properties:
      contenido:
        type: string
      usuario:
        type: string
    required:
    - contenido
    - usuario
    type: object
  controllers.RemoveTagInput:
    properties:
      tag:
        description: Propiedad a eliminar
        type: string
      users:
        description: Usuarios a etiquetar
        items:
          type: string
        type: array
    required:
    - tag
    - users
    type: object
  controllers.SetPreferredMusicPlayerInput:
    properties:
      music_player:
        description: MusicPlayer Reproductor de música preferido (Spotify, Apple Music,
          etc)
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - music_player
    - usuario
    type: object
  controllers.SetSongRemembersInput:
    properties:
      cancion:
        type: string
      me_recuerda_a:
        type: string
      usuario:
        type: string
    required:
    - cancion
    - me_recuerda_a
    - usuario
    type: object
  controllers.SignInDetails:
    properties:
      password:
        type: string
      usuario:
        type: string
    required:
    - password
    - usuario
    type: object
  controllers.TagUsersInput:
    properties:
      tag:
        description: Propiedad a crear
        type: string
      users:
        description: Usuarios a etiquetar
        items:
          type: string
        type: array
      value:
        description: Valor de la propiedad
        type: boolean
    required:
    - tag
    - users
    - value
    type: object
  models.Cancion:
    properties:
      disco:
        type: string
      duracion:
        type: number
      fecha_lanzamiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      genero:
        type: string
      nombre:
        type: string
    required:
    - disco
    - duracion
    - fecha_lanzamiento
    - genero
    - nombre
    type: object
  models.Carrera:
    properties:
      director:
        type: string
      duracion:
        type: integer
      estudiantes_registrados:
        type: integer
      facultad:
        type: string
      nombre_carrera:
        type: string
    required:
    - director
    - duracion
    - estudiantes_registrados
    - facultad
    - nombre_carrera
    type: object
  models.Equipo:
    properties:
      deporte:
        type: string
      division:
        type: string
      fecha_establecimiento:
        type: string
      nombre:
        type: string
      pais:
        type: string
    required:
    - deporte
    - division
    - fecha_establecimiento
    - nombre
    - pais
    type: object
  models.Estudiante:
    properties:
      apellido:
        type: string
      carnet:
        type: string
      colegio:
        type: string
      conexiones:
        description: Conexiones usuarios
        items:
          type: string
        type: array
      correo:
        type: string
      fecha_nacimiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      foraneo:
        type: boolean
      genero:
        type: string
      nombre:
        type: string
      parqueo:
        type: boolean
      password:
        type: string
      publicaciones:
        items:
          type: string
        type: array
      usuario:
        type: string
    required:
    - apellido
    - carnet
    - colegio
    - correo
    - fecha_nacimiento
    - foraneo
    - genero
    - nombre
    - parqueo
    - password
    - usuario
    type: object
  models.Lugar:
    properties:
      departamento:
        type: string
      direccion:
        type: string
      foto:
        type: string
      nombre:
        type: string
      tipo:
        type: string
    required:
    - departamento
    - direccion
    - foto
    - nombre
    - tipo
    type: object
  models.Persona:
    properties:
      apellido:
        type: string
      conexiones:
        description: Conexiones usuarios
        items:
          type: string
        type: array
      fecha_nacimiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      genero:
        type: string
      nombre:
        type: string
      password:
        type: string
      publicaciones:
        items:
          type: string
        type: array
      usuario:
        type: string
    required:
    - apellido
    - fecha_nacimiento
    - genero
    - nombre
    - password
    - usuario
    type: object
  models.Profesor:
    properties:
      apellido:
        type: string
      code:
        type: string
      conexiones:
        description: Conexiones usuarios
        items:
          type: string
        type: array
      correo_profesor:
        type: string
      departamento:
        type: string
      fecha_nacimiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      genero:
        type: string
      jornada:
        type: string
      maestria:
        type: string
      nombre:
        type: string
      password:
        type: string
      publicaciones:
        items:
          type: string
        type: array
      usuario:
        type: string
    required:
    - apellido
    - code
    - correo_profesor
    - departamento
    - fecha_nacimiento
    - genero
    - jornada
    - maestria
    - nombre
    - password
    - usuario
    type: object
  models.ProfesorEstudiante:
    properties:
      apellido:
        type: string
      carnet:
        type: string
      code:
        type: string
      colegio:
        type: string
      conexiones:
        description: Conexiones usuarios
        items:
          type: string
        type: array
      correo:
        type: string
      correo_profesor:
        type: string
      departamento:
        type: string
      fecha_nacimiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      foraneo:
        type: boolean
      genero:
        type: string
      jornada:
        type: string
      maestria:
        type: string
      nombre:
        type: string
      parqueo:
        type: boolean
      password:
        type: string
      publicaciones:
        items:
          type: string
        type: array
      usuario:
        type: string
    required:
    - apellido
    - carnet
    - code
    - colegio
    - correo
    - correo_profesor
    - departamento
    - fecha_nacimiento
    - foraneo
    - genero
    - maestria
    - nombre
    - parqueo
    - password
    - usuario
    type: object
  models.RelationApoyaEquipo:
    properties:
      equipo:
        type: string
      fecha:
        description: 'Formato: "YYYY-MM-DD"'
        type: string
      mira_partidos:
        type: boolean
      por_que:
        type: string
      usuario:
        type: string
    required:
    - equipo
    - fecha
    - mira_partidos
    - por_que
    - usuario
    type: object
  models.RelationEsSigno:
    properties:
      compartir:
        description: Compartir si el usuario comparte signo con el signo
        type: boolean
      compatibilidad:
        description: Compatibilidad Nivel de compatibilidad del signo
        type: integer
      influencia:
        description: Influencia del signo en la vida del usuario
        type: boolean
      signo:
        description: Signo Nombre del signo zodiacal del usuario
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - compartir
    - compatibilidad
    - influencia
    - signo
    - usuario
    type: object
  models.RelationEstudiaCarrera:
    properties:
      activo:
        description: Activo si el usuario está activo en la carrera
        type: boolean
      apasiona:
        description: Apasiona si al usuario le apasiona la carrera
        type: boolean
      carrera:
        description: Carrera Nombre de la carrera
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
      year:
        description: Year Año en el que el usuario ingresó a la carrera
        type: integer
    required:
    - activo
    - apasiona
    - carrera
    - usuario
    - year
    type: object
  models.RelationLeInteresaCarrera:
    properties:
      carrera:
        description: Carrera Nombre de la carrera
        type: string
      estudiara:
        description: Estudiara si el usuario estudiará la carrera
        type: boolean
      intereses:
        description: Intereses Intereses del usuario en la carrera
        items:
          type: string
        type: array
      recomendado:
        description: Recomendado si al usuario le recomendaron la carrera
        type: boolean
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - carrera
    - estudiara
    - intereses
    - recomendado
    - usuario
    type: object
  models.RelationNoLeGustaLugar:
    properties:
      categoria:
        description: Categoria Categoria del lugar
        type: string
      cuando:
        description: Cuando Fecha en la que el usuario visitó el lugar
        type: string
      lugar:
        description: Lugar Nombre del lugar
        type: string
      rating:
        description: Rating Calificación del lugar por el usuario
        type: integer
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - categoria
    - cuando
    - lugar
    - rating
    - usuario
    type: object
  models.RelationPersonaFavoritaCancion:
    properties:
      cancion:
        description: Cancion Nombre de la cancion
        type: string
      como:
        description: Como Cómo la conoció
        type: string
      cuando:
        description: Cuando Fecha en la que el usuario conoció la canción
        type: string
      frecuencia:
        description: Frecuencia Frecuencia con la que se escucha
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - cancion
    - como
    - cuando
    - frecuencia
    - usuario
    type: object
  models.RelationPersonaLeGustaCancion:
    properties:
      cancion:
        description: Cancion Nombre de la cancion
        type: string
      como:
        description: Como Cómo la conoció
        type: string
      escucha:
        description: Escucha seguido
        type: boolean
      mas_artista:
        description: Escucha más canciones del artista
        type: boolean
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - cancion
    - como
    - escucha
    - mas_artista
    - usuario
    type: object
  models.RelationPersonaNoLeGustaCancion:
    properties:
      cambiar:
        description: Cambiar de Opinión
        type: boolean
      cancion:
        description: Cancion Nombre de la cancion
        type: string
      intensidad:
        description: Intensidad de disgusto
        type: integer
      motivo:
        description: Motivo Motivo por el que no le gusta
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - cambiar
    - cancion
    - intensidad
    - motivo
    - usuario
    type: object
  models.RelationRechazaEquipo:
    properties:
      equipo:
        type: string
      fecha:
        description: 'Formato: "YYYY-MM-DD"'
        type: string
      mira_partidos:
        type: boolean
      por_que:
        type: string
      usuario:
        type: string
    required:
    - equipo
    - fecha
    - mira_partidos
    - por_que
    - usuario
    type: object
  models.RelationVisitaLugar:
    properties:
      categoria:
        description: Categoria Categoria del lugar
        type: string
      cuando:
        description: Cuando Fecha en la que el usuario visitó el lugar
        type: string
      lugar:
        description: Lugar Nombre del lugar
        type: string
      rating:
        description: Rating Calificación del lugar por el usuario
        type: integer
      usuario:
        description: Usuario Nombre de usuario
        type: string
    required:
    - categoria
    - cuando
    - lugar
    - rating
    - usuario
    type: object
  models.Signo:
    properties:
      dia_semana:
        type: string
      elemento:
        type: string
      metal:
        type: string
      nombre:
        type: string
      piedra:
        type: string
      planeta:
        type: string
    required:
    - dia_semana
    - elemento
    - metal
    - nombre
    - piedra
    - planeta
    type: object
  responses.CareerResponse:
    properties:
      careers:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Carrera'
        type: array
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.ErrorResponse:
    properties:
      error:
        description: Detalles específicos del error
        type: string
      message:
        description: Mensaje de error de la respuesta
        type: string
      status:
        description: Código de error de la respuesta
        type: integer
    type: object
  responses.MetricsResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      metrics:
        additionalProperties:
          type: integer
        description: Datos adicionales de la respuesta
        type: object
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.PlacesResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      places:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Lugar'
        type: array
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.SongsResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      songs:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Cancion'
        type: array
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.StandardResponse:
    properties:
      data:
        additionalProperties: true
        description: Datos adicionales de la respuesta
        type: object
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.TeamsResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
      teams:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Equipo'
        type: array
    type: object
  responses.UsersResponse:
    properties:
      status:
        description: Código de estado de la respuesta
        type: integer
      users:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Persona'
        type: array
    type: object
  responses.ZodiacalSignResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
      zodiacalSign:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Signo'
        type: array
    type: object
info:
  contact: {}
paths:
  /admin/metrics:
    get:
      consumes:
      - application/json
      description: Obtiene métricas de la base de datos. Se utilizan consultas agregadas
        para obtener la cantidad de usuarios, publicaciones, lugares, equipos, canciones,
        carreras, signos zodiacales y relaciones de usuario con canciones, lugares,
        equipos, carreras y signos zodiacales
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MetricsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtener métricas
      tags:
      - Admin
  /admin/tag:
    post:
      consumes:
      - application/json
      description: Etiquetar multiples usuarios con una propiedad.
      parameters:
      - description: Usuarios y etiqueta
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.TagUsersInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StandardResponse'
      summary: Etiquetar usuarios
      tags:
      - Admin
  /admin/tag/remove:
    post:
      consumes:
      - application/json
      description: Eliminar una propiedad de multiples usuarios
      parameters:
      - description: Usuarios y etiqueta
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.RemoveTagInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.StandardResponse'
      summary: Eliminar propiedad de usuarios
      tags:
      - Admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: Obtiene todos los usuarios registrados en la base de datos
      parameters:
      - description: Filtro de búsqueda opcional en base a una propiedad
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Usuarios obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.UsersResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los usuarios
      tags:
      - Admin
  /admin/users/delete:
    post:
      consumes:
      - application/json
      description: Elimina multiples usuarios de la base de datos
      parameters:
      - description: Usuarios a eliminar
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.DeleteUsersInput'
      produces:
      - application/json
      responses:
        "200":
          description: Usuarios eliminados correctamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "404":
          description: Usuario no encontrado
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Elimina usuarios
      tags:
      - Admin
  /careers:
    get:
      consumes:
      - application/json
      description: Obtiene todas las carreras de la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Carreras obtenidas exitosamente
          schema:
            $ref: '#/definitions/responses.CareerResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todas las carreras
      tags:
      - Carreras
  /careers/interests:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Estudiante)-[LE_INTERESA]->(Carrera)
      parameters:
      - description: Relación de interés de estudiante con carrera
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationLeInteresaCarrera'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de interés de un estudiante con una carrera
      tags:
      - Carreras
  /careers/studies:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Estudiante)-[ESTUDIA]->(Carrera)
      parameters:
      - description: Relación de estudia carrera
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationEstudiaCarrera'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de un estudiante con una carrera
      tags:
      - Carreras
  /places/:
    get:
      consumes:
      - application/json
      description: Obtiene todos los lugares registrados en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Lugares obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.PlacesResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los lugares
      tags:
      - Lugares
    post:
      consumes:
      - application/json
      description: Crea un nuevo lugar en la base de datos
      parameters:
      - description: Datos del lugar a crear
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/models.Lugar'
      produces:
      - application/json
      responses:
        "201":
          description: Lugar creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea un nuevo lugar
      tags:
      - Lugares
  /places/dislikes:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[NO_LE_GUSTA]->(Lugar)
      parameters:
      - description: Relación de no le gusta de un lugar
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationNoLeGustaLugar'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de no le gusta de un usuario a un lugar
      tags:
      - Lugares
  /places/visited:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[VISITA]->(Lugar)
      parameters:
      - description: Relación de visita de un lugar
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationVisitaLugar'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de visita de un usuario a un lugar
      tags:
      - Lugares
  /relations/delete:
    post:
      consumes:
      - application/json
      description: Elimina relaciones de un nodo dado el nombre del nodo, el nombre
        de la relación y el nombre de usuario
      parameters:
      - description: Relaciones a eliminar
        in: body
        name: relations
        required: true
        schema:
          $ref: '#/definitions/controllers.DeleteRelationsInput'
      produces:
      - application/json
      responses:
        "200":
          description: Relación eliminada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al eliminar la relación
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Elimina relaciones de un nodo
      tags:
      - Usuarios
  /relations/delete-all/{username}:
    delete:
      consumes:
      - application/json
      description: Elimina todas las relaciones de un usuario dado su nombre de usuario
      parameters:
      - description: Nombre de usuario
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Relaciones eliminadas exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al eliminar las relaciones
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Elimina todas las relaciones de un usuario
      tags:
      - Usuarios
  /signs:
    get:
      consumes:
      - application/json
      description: Obtiene todos los signos zodiacales de la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Signos zodiacales obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.ZodiacalSignResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los signos zodiacales
      tags:
      - Signos Zodiacales
  /signs/is:
    post:
      consumes:
      - application/json
      description: Crea una relación entre un usuario y un signo zodiacal. La relación
        define de qué signo es el usuario, la compatibilidad, la influencia y si al
        usuario le gusta compartir su signo zodiacal
      parameters:
      - description: Relación a crear
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationEsSigno'
      produces:
      - application/json
      responses:
        "200":
          description: Relación ES_SIGNO creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación entre un usuario y un signo zodiacal
      tags:
      - Signos Zodiacales
  /songs/:
    get:
      consumes:
      - application/json
      description: Obtiene todas las canciones registradas en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Canciones obtenidas exitosamente
          schema:
            $ref: '#/definitions/responses.SongsResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todas las canciones
      tags:
      - Canciones
    post:
      consumes:
      - application/json
      description: Crea una nueva canción en la base de datos
      parameters:
      - description: Datos de la canción a crear
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Cancion'
      produces:
      - application/json
      responses:
        "201":
          description: Canción creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una nueva canción
      tags:
      - Canciones
  /songs/dislikes:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[NO_LE_GUSTA]->(Cancion)
      parameters:
      - description: Relación de persona no le gusta canción
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationPersonaNoLeGustaCancion'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de una persona con una canción que no le gusta
      tags:
      - Canciones
  /songs/favorite:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[ES_FAVORITA]->(Cancion)
      parameters:
      - description: Relación de persona favorita canción
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationPersonaFavoritaCancion'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de una persona con una canción favorita
      tags:
      - Canciones
  /songs/likes:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[LE_GUSTA]->(Cancion)
      parameters:
      - description: Relación de persona le gusta canción
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationPersonaLeGustaCancion'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de una persona con una canción que le gusta
      tags:
      - Canciones
  /songs/music-player:
    put:
      consumes:
      - application/json
      description: 'Establece o actualiza el reproductor de música preferido de un
        usuario. A cualquier relación (p:Persona {Usuario: $usuario})-[r}-(c:Cancion)
        se le agrega la propiedad "MusicPlayer"'
      parameters:
      - description: Datos de la relación a modificar
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.SetPreferredMusicPlayerInput'
      produces:
      - application/json
      responses:
        "200":
          description: Propiedad modificada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Establece o actualiza el reproductor de música preferido de un usuario
      tags:
      - Canciones
  /songs/music-player/:username:
    delete:
      consumes:
      - application/json
      description: 'Elimina el reproductor de música preferido de un usuario. A cualquier
        relación (p:Persona {Usuario: $usuario})-[r}-(c:Cancion) se le elimina la
        propiedad "MusicPlayer"'
      parameters:
      - description: Nombre de usuario
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Propiedad eliminada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Elimina el reproductor de música preferido de un usuario
      tags:
      - Canciones
  /songs/remembers:
    put:
      consumes:
      - application/json
      description: Establece o actualiza una nueva propiedad a una relación de (Persona)-[ES_FAVORITA]->(Cancion).
        La propiedad es "MeRecuerda"
      parameters:
      - description: Datos de la relación a modificar
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.SetSongRemembersInput'
      produces:
      - application/json
      responses:
        "200":
          description: Propiedad modificada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Establece una nueva propiedad a una relación de una persona con una
        canción
      tags:
      - Canciones
  /songs/remembers/remove:
    post:
      consumes:
      - application/json
      description: Elimina una propiedad de una relación de (Persona)-[ES_FAVORITA]->(Cancion).
        La propiedad es "MeRecuerda"
      parameters:
      - description: Datos de la relación a modificar
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.DeleteSongRememberPropertyInput'
      produces:
      - application/json
      responses:
        "200":
          description: Propiedad eliminada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Elimina una propiedad de una relación de una persona con una canción
      tags:
      - Canciones
  /teams/:
    get:
      consumes:
      - application/json
      description: Obtiene todos los equipos registrados en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Equipos obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.TeamsResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los equipos
      tags:
      - Equipos
    post:
      consumes:
      - application/json
      description: Crea un nuevo equipo en la base de datos
      parameters:
      - description: Datos del equipo
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/models.Equipo'
      produces:
      - application/json
      responses:
        "201":
          description: Equipo creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea un nuevo equipo
      tags:
      - Equipos
  /teams/dislikes:
    post:
      consumes:
      - application/json
      description: Crea una relación de de (Persona)-[:RECHAZA]->(Equipo) en la base
        de datos
      parameters:
      - description: Datos de la relación
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationRechazaEquipo'
      produces:
      - application/json
      responses:
        "201":
          description: Relación de rechazo creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de rechazo entre una persona y un equipo
      tags:
      - Equipos
  /teams/likes:
    post:
      consumes:
      - application/json
      description: Crea una relación de de (Persona)-[:APOYA]->(Equipo) en la base
        de datos
      parameters:
      - description: Datos de la relación
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationApoyaEquipo'
      produces:
      - application/json
      responses:
        "201":
          description: Relación de apoyo creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de apoyo entre una persona y un equipo
      tags:
      - Equipos
  /users/clear/{username}:
    delete:
      consumes:
      - application/json
      description: Limpia las publicaciones de un usuario en la base de datos
      parameters:
      - description: Nombre de usuario
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Publicaciones limpiadas exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "500":
          description: Error al limpiar las publicaciones
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Limpia las publicaciones de un usuario en la base de datos
      tags:
      - Publicaciones
  /users/details/{username}:
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de un usuario dado su nombre de usuario
      parameters:
      - description: Nombre de usuario
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Datos del usuario obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene los detalles de un usuario
      tags:
      - Usuarios
  /users/login:
    post:
      consumes:
      - application/json
      description: Autentica un usuario dado su nombre de usuario y contraseña
      parameters:
      - description: Detalles de inicio de sesión
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.SignInDetails'
      produces:
      - application/json
      responses:
        "200":
          description: Usuario autenticado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: El usuario no existe
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Autentica un usuario
      tags:
      - Usuarios
  /users/post:
    post:
      consumes:
      - application/json
      description: Crea una nueva publicación para un usuario. Si el usuario no tiene
        publicaciones, se crea la propiedad Publicaciones, de lo contrario, se actualiza
        la propiedad Publicaciones
      parameters:
      - description: Publicación a crear
        in: body
        name: publication
        required: true
        schema:
          $ref: '#/definitions/controllers.NewPublicationInput'
      produces:
      - application/json
      responses:
        "200":
          description: Publicación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: El usuario no existe
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una nueva publicación
      tags:
      - Publicaciones
  /users/profesor-student:
    post:
      consumes:
      - application/json
      description: Registra un nuevo profesor y estudiante en la base de datos
      parameters:
      - description: Profesor y estudiante a registrar
        in: body
        name: profesor_student
        required: true
        schema:
          $ref: '#/definitions/models.ProfesorEstudiante'
      produces:
      - application/json
      responses:
        "200":
          description: Profesor y estudiante creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Registra un nuevo profesor y estudiante
      tags:
      - Usuarios
  /users/relations/{username}:
    get:
      consumes:
      - application/json
      description: Obtiene las relaciones de un usuario dado su nombre de usuario
      parameters:
      - description: Nombre de usuario
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Relaciones del usuario obtenidas exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al obtener las relaciones del usuario
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene las relaciones de un usuario
      tags:
      - Usuarios
  /users/student:
    post:
      consumes:
      - application/json
      description: Registra un nuevo estudiante en la base de datos
      parameters:
      - description: Estudiante a registrar
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Estudiante'
      produces:
      - application/json
      responses:
        "200":
          description: Estudiante creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Registra un nuevo estudiante
      tags:
      - Estudiantes
  /users/teacher:
    post:
      consumes:
      - application/json
      description: Registra un nuevo profesor en la base de datos
      parameters:
      - description: Profesor a registrar
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Profesor'
      produces:
      - application/json
      responses:
        "200":
          description: Profesor creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Registra un nuevo profesor
      tags:
      - Profesores
swagger: "2.0"
