definitions:
  models.Cancion:
    properties:
      disco:
        type: string
      duracion:
        type: number
      fecha_lanzamiento:
        type: string
      genero:
        type: string
      nombre:
        type: string
    type: object
  models.Carrera:
    properties:
      director:
        type: string
      duracion:
        type: integer
      estudiantes_registrados:
        type: integer
      facultad:
        type: string
      nombre_carrera:
        type: string
    type: object
  models.Equipo:
    properties:
      deporte:
        type: string
      division:
        type: string
      fecha_establecimiento:
        type: string
      nombre:
        type: string
      pais:
        type: string
    type: object
  models.Estudiante:
    properties:
      apellido:
        type: string
      carnet:
        type: string
      colegio:
        type: string
      conexiones:
        description: Conexiones usuarios
        items:
          type: string
        type: array
      correo:
        type: string
      fecha_nacimiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      foraneo:
        type: boolean
      genero:
        type: string
      nombre:
        type: string
      parqueo:
        type: boolean
      password:
        type: string
      publicaciones:
        items:
          type: string
        type: array
      usuario:
        type: string
    type: object
  models.Lugar:
    properties:
      departamento:
        type: string
      direccion:
        type: string
      foto:
        type: string
      nombre:
        type: string
      tipo:
        type: string
    type: object
  models.Profesor:
    properties:
      apellido:
        type: string
      code:
        type: string
      conexiones:
        description: Conexiones usuarios
        items:
          type: string
        type: array
      correo:
        type: string
      departamento:
        type: string
      fecha_nacimiento:
        description: 'Formato: YYYY-MM-DD'
        type: string
      genero:
        type: string
      jornada:
        type: string
      maestria:
        type: string
      nombre:
        type: string
      password:
        type: string
      publicaciones:
        items:
          type: string
        type: array
      usuario:
        type: string
    type: object
  models.RelationEsSigno:
    properties:
      compartir:
        description: Compartir si el usuario comparte signo con el signo
        type: boolean
      compatibilidad:
        description: Compatibilidad Nivel de compatibilidad del signo
        type: integer
      influencia:
        description: Influencia del signo en la vida del usuario
        type: boolean
      signo:
        description: Signo Nombre del signo zodiacal del usuario
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
    type: object
  models.RelationEstudiaCarrera:
    properties:
      activo:
        description: Activo si el usuario está activo en la carrera
        type: boolean
      apasiona:
        description: Apasiona si al usuario le apasiona la carrera
        type: boolean
      carrera:
        description: Carrera Nombre de la carrera
        type: string
      usuario:
        description: Usuario Nombre de usuario
        type: string
      year:
        description: Year Año en el que el usuario ingresó a la carrera
        type: integer
    type: object
  models.RelationLeInteresaCarrera:
    properties:
      carrera:
        description: Carrera Nombre de la carrera
        type: string
      estudiara:
        description: Estudiara si el usuario estudiará la carrera
        type: boolean
      intereses:
        description: Intereses Intereses del usuario en la carrera
        items:
          type: string
        type: array
      recomendado:
        description: Recomendado si al usuario le recomendaron la carrera
        type: boolean
      usuario:
        description: Usuario Nombre de usuario
        type: string
    type: object
  models.RelationNoLeGustaLugar:
    properties:
      categoria:
        description: Categoria Categoria del lugar
        type: string
      cuando:
        description: Cuando Fecha en la que el usuario visitó el lugar
        type: string
      lugar:
        description: Lugar Nombre del lugar
        type: string
      rating:
        description: Rating Calificación del lugar por el usuario
        type: integer
      usuario:
        description: Usuario Nombre de usuario
        type: string
    type: object
  models.RelationVisitaLugar:
    properties:
      categoria:
        description: Categoria Categoria del lugar
        type: string
      cuando:
        description: Cuando Fecha en la que el usuario visitó el lugar
        type: string
      lugar:
        description: Lugar Nombre del lugar
        type: string
      rating:
        description: Rating Calificación del lugar por el usuario
        type: integer
      usuario:
        description: Usuario Nombre de usuario
        type: string
    type: object
  models.Signo:
    properties:
      dia_semana:
        type: string
      elemento:
        type: string
      metal:
        type: string
      nombre:
        type: string
      piedra:
        type: string
      planeta:
        type: string
    type: object
  responses.CareerResponse:
    properties:
      careers:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Carrera'
        type: array
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.ErrorResponse:
    properties:
      error:
        description: Detalles específicos del error
        type: string
      message:
        description: Mensaje de error de la respuesta
        type: string
      status:
        description: Código de error de la respuesta
        type: integer
    type: object
  responses.PlacesResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      places:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Lugar'
        type: array
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.SongsResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      songs:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Cancion'
        type: array
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.StandardResponse:
    properties:
      data:
        additionalProperties: true
        description: Datos adicionales de la respuesta
        type: object
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
    type: object
  responses.TeamsResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
      teams:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Equipo'
        type: array
    type: object
  responses.ZodiacalSignResponse:
    properties:
      message:
        description: Mensaje de la respuesta
        type: string
      status:
        description: Código de estado de la respuesta
        type: integer
      zodiacalSign:
        description: Datos adicionales de la respuesta
        items:
          $ref: '#/definitions/models.Signo'
        type: array
    type: object
info:
  contact: {}
paths:
  /careers:
    get:
      consumes:
      - application/json
      description: Obtiene todas las carreras de la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Carreras obtenidas exitosamente
          schema:
            $ref: '#/definitions/responses.CareerResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todas las carreras
      tags:
      - Carreras
  /careers/interests:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Estudiante)-[LE_INTERESA]->(Carrera)
      parameters:
      - description: Relación de interés de estudiante con carrera
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationLeInteresaCarrera'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de interés de un estudiante con una carrera
      tags:
      - Carreras
  /careers/studies:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Estudiante)-[ESTUDIA]->(Carrera)
      parameters:
      - description: Relación de estudia carrera
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationEstudiaCarrera'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de un estudiante con una carrera
      tags:
      - Carreras
  /places/:
    get:
      consumes:
      - application/json
      description: Obtiene todos los lugares registrados en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Lugares obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.PlacesResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los lugares
      tags:
      - Lugares
    post:
      consumes:
      - application/json
      description: Crea un nuevo lugar en la base de datos
      parameters:
      - description: Datos del lugar a crear
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/models.Lugar'
      produces:
      - application/json
      responses:
        "201":
          description: Lugar creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea un nuevo lugar
      tags:
      - Lugares
  /places/dislikes:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[NO_LE_GUSTA]->(Lugar)
      parameters:
      - description: Relación de no le gusta de un lugar
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationNoLeGustaLugar'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de no le gusta de un usuario a un lugar
      tags:
      - Lugares
  /places/visited:
    post:
      consumes:
      - application/json
      description: Crea una relación de (Persona)-[VISITA]->(Lugar)
      parameters:
      - description: Relación de visita de un lugar
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationVisitaLugar'
      produces:
      - application/json
      responses:
        "200":
          description: Relación creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación de visita de un usuario a un lugar
      tags:
      - Lugares
  /signs:
    get:
      consumes:
      - application/json
      description: Obtiene todos los signos zodiacales de la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Signos zodiacales obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.ZodiacalSignResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los signos zodiacales
      tags:
      - Signos Zodiacales
  /signs/relation:
    post:
      consumes:
      - application/json
      description: Crea una relación entre un usuario y un signo zodiacal. La relación
        define de qué signo es el usuario, la compatibilidad, la influencia y si al
        usuario le gusta compartir su signo zodiacal
      parameters:
      - description: Relación a crear
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/models.RelationEsSigno'
      produces:
      - application/json
      responses:
        "200":
          description: Relación ES_SIGNO creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una relación entre un usuario y un signo zodiacal
      tags:
      - Signos Zodiacales
  /songs/:
    get:
      consumes:
      - application/json
      description: Obtiene todas las canciones registradas en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Canciones obtenidas exitosamente
          schema:
            $ref: '#/definitions/responses.SongsResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todas las canciones
      tags:
      - Canciones
    post:
      consumes:
      - application/json
      description: Crea una nueva canción en la base de datos
      parameters:
      - description: Datos de la canción a crear
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Cancion'
      produces:
      - application/json
      responses:
        "201":
          description: Canción creada exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea una nueva canción
      tags:
      - Canciones
  /teams/:
    get:
      consumes:
      - application/json
      description: Obtiene todos los equipos registrados en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Equipos obtenidos exitosamente
          schema:
            $ref: '#/definitions/responses.TeamsResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Obtiene todos los equipos
      tags:
      - Equipos
    post:
      consumes:
      - application/json
      description: Crea un nuevo equipo en la base de datos
      parameters:
      - description: Datos del equipo
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/models.Equipo'
      produces:
      - application/json
      responses:
        "201":
          description: Equipo creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Crea un nuevo equipo
      tags:
      - Equipos
  /users/student:
    post:
      consumes:
      - application/json
      description: Registra un nuevo estudiante en la base de datos
      parameters:
      - description: Estudiante a registrar
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Estudiante'
      produces:
      - application/json
      responses:
        "200":
          description: Estudiante creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Registra un nuevo estudiante
      tags:
      - Estudiantes
  /users/teacher:
    post:
      consumes:
      - application/json
      description: Registra un nuevo profesor en la base de datos
      parameters:
      - description: Profesor a registrar
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Profesor'
      produces:
      - application/json
      responses:
        "200":
          description: Profesor creado exitosamente
          schema:
            $ref: '#/definitions/responses.StandardResponse'
        "400":
          description: Error al procesar la solicitud
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Registra un nuevo profesor
      tags:
      - Profesores
swagger: "2.0"
