// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/tag": {
            "post": {
                "description": "Etiquetar multiples usuarios con una propiedad",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Etiquetar usuarios",
                "parameters": [
                    {
                        "description": "Usuarios y etiqueta",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.TagUsersInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    }
                }
            }
        },
        "/admin/tag/remove": {
            "post": {
                "description": "Eliminar una propiedad de multiples usuarios",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Eliminar propiedad de usuarios",
                "parameters": [
                    {
                        "description": "Usuarios y etiqueta",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RemoveTagInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "description": "Obtiene todos los usuarios registrados en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Obtiene todos los usuarios",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtro de búsqueda opcional en base a una propiedad",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuarios obtenidos exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.UsersResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/delete": {
            "post": {
                "description": "Elimina multiples usuarios de la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Elimina usuarios",
                "parameters": [
                    {
                        "description": "Usuarios a eliminar",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.DeleteUsersInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuarios eliminados correctamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/careers": {
            "get": {
                "description": "Obtiene todas las carreras de la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carreras"
                ],
                "summary": "Obtiene todas las carreras",
                "responses": {
                    "200": {
                        "description": "Carreras obtenidas exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.CareerResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/careers/interests": {
            "post": {
                "description": "Crea una relación de (Estudiante)-[LE_INTERESA]-\u003e(Carrera)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carreras"
                ],
                "summary": "Crea una relación de interés de un estudiante con una carrera",
                "parameters": [
                    {
                        "description": "Relación de interés de estudiante con carrera",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationLeInteresaCarrera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/careers/studies": {
            "post": {
                "description": "Crea una relación de (Estudiante)-[ESTUDIA]-\u003e(Carrera)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carreras"
                ],
                "summary": "Crea una relación de un estudiante con una carrera",
                "parameters": [
                    {
                        "description": "Relación de estudia carrera",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationEstudiaCarrera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/places/": {
            "get": {
                "description": "Obtiene todos los lugares registrados en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lugares"
                ],
                "summary": "Obtiene todos los lugares",
                "responses": {
                    "200": {
                        "description": "Lugares obtenidos exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.PlacesResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo lugar en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lugares"
                ],
                "summary": "Crea un nuevo lugar",
                "parameters": [
                    {
                        "description": "Datos del lugar a crear",
                        "name": "place",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Lugar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lugar creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/places/dislikes": {
            "post": {
                "description": "Crea una relación de (Persona)-[NO_LE_GUSTA]-\u003e(Lugar)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lugares"
                ],
                "summary": "Crea una relación de no le gusta de un usuario a un lugar",
                "parameters": [
                    {
                        "description": "Relación de no le gusta de un lugar",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationNoLeGustaLugar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/places/visited": {
            "post": {
                "description": "Crea una relación de (Persona)-[VISITA]-\u003e(Lugar)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lugares"
                ],
                "summary": "Crea una relación de visita de un usuario a un lugar",
                "parameters": [
                    {
                        "description": "Relación de visita de un lugar",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationVisitaLugar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signs": {
            "get": {
                "description": "Obtiene todos los signos zodiacales de la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Signos Zodiacales"
                ],
                "summary": "Obtiene todos los signos zodiacales",
                "responses": {
                    "200": {
                        "description": "Signos zodiacales obtenidos exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.ZodiacalSignResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signs/is": {
            "post": {
                "description": "Crea una relación entre un usuario y un signo zodiacal. La relación define de qué signo es el usuario, la compatibilidad, la influencia y si al usuario le gusta compartir su signo zodiacal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Signos Zodiacales"
                ],
                "summary": "Crea una relación entre un usuario y un signo zodiacal",
                "parameters": [
                    {
                        "description": "Relación a crear",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationEsSigno"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación ES_SIGNO creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/songs/": {
            "get": {
                "description": "Obtiene todas las canciones registradas en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canciones"
                ],
                "summary": "Obtiene todas las canciones",
                "responses": {
                    "200": {
                        "description": "Canciones obtenidas exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.SongsResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea una nueva canción en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canciones"
                ],
                "summary": "Crea una nueva canción",
                "parameters": [
                    {
                        "description": "Datos de la canción a crear",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cancion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Canción creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/songs/dislikes": {
            "post": {
                "description": "Crea una relación de (Persona)-[NO_LE_GUSTA]-\u003e(Cancion)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canciones"
                ],
                "summary": "Crea una relación de una persona con una canción que no le gusta",
                "parameters": [
                    {
                        "description": "Relación de persona no le gusta canción",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationPersonaNoLeGustaCancion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/songs/favorite": {
            "post": {
                "description": "Crea una relación de (Persona)-[ES_FAVORITA]-\u003e(Cancion)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canciones"
                ],
                "summary": "Crea una relación de una persona con una canción favorita",
                "parameters": [
                    {
                        "description": "Relación de persona favorita canción",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationPersonaFavoritaCancion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/songs/likes": {
            "post": {
                "description": "Crea una relación de (Persona)-[LE_GUSTA]-\u003e(Cancion)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canciones"
                ],
                "summary": "Crea una relación de una persona con una canción que le gusta",
                "parameters": [
                    {
                        "description": "Relación de persona le gusta canción",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationPersonaLeGustaCancion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/songs/remembers": {
            "put": {
                "description": "Establece o actualiza una nueva propiedad a una relación de (Persona)-[ES_FAVORITA]-\u003e(Cancion). La propiedad es \"MeRecuerda\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canciones"
                ],
                "summary": "Establece una nueva propiedad a una relación de una persona con una canción",
                "parameters": [
                    {
                        "description": "Datos de la relación a modificar",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SetSongRemembersInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Propiedad modificada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teams/": {
            "get": {
                "description": "Obtiene todos los equipos registrados en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipos"
                ],
                "summary": "Obtiene todos los equipos",
                "responses": {
                    "200": {
                        "description": "Equipos obtenidos exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.TeamsResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo equipo en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipos"
                ],
                "summary": "Crea un nuevo equipo",
                "parameters": [
                    {
                        "description": "Datos del equipo",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Equipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Equipo creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teams/dislikes": {
            "post": {
                "description": "Crea una relación de de (Persona)-[:RECHAZA]-\u003e(Equipo) en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipos"
                ],
                "summary": "Crea una relación de rechazo entre una persona y un equipo",
                "parameters": [
                    {
                        "description": "Datos de la relación",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationRechazaEquipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Relación de rechazo creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teams/likes": {
            "post": {
                "description": "Crea una relación de de (Persona)-[:APOYA]-\u003e(Equipo) en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipos"
                ],
                "summary": "Crea una relación de apoyo entre una persona y un equipo",
                "parameters": [
                    {
                        "description": "Datos de la relación",
                        "name": "relation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelationApoyaEquipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Relación de apoyo creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/clear/{username}": {
            "delete": {
                "description": "Limpia las publicaciones de un usuario en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publicaciones"
                ],
                "summary": "Limpia las publicaciones de un usuario en la base de datos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre de usuario",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publicaciones limpiadas exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error al limpiar las publicaciones",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/details/{username}": {
            "get": {
                "description": "Obtiene los detalles de un usuario dado su nombre de usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "summary": "Obtiene los detalles de un usuario",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre de usuario",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Datos del usuario obtenidos exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Autentica un usuario dado su nombre de usuario y contraseña",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "summary": "Autentica un usuario",
                "parameters": [
                    {
                        "description": "Detalles de inicio de sesión",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SignInDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario autenticado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/post": {
            "post": {
                "description": "Crea una nueva publicación para un usuario. Si el usuario no tiene publicaciones, se crea la propiedad Publicaciones, de lo contrario, se actualiza la propiedad Publicaciones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publicaciones"
                ],
                "summary": "Crea una nueva publicación",
                "parameters": [
                    {
                        "description": "Publicación a crear",
                        "name": "publication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.NewPublicationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publicación creada exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/profesor-student": {
            "post": {
                "description": "Registra un nuevo profesor y estudiante en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "summary": "Registra un nuevo profesor y estudiante",
                "parameters": [
                    {
                        "description": "Profesor y estudiante a registrar",
                        "name": "profesor_student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProfesorEstudiante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profesor y estudiante creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/student": {
            "post": {
                "description": "Registra un nuevo estudiante en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Estudiantes"
                ],
                "summary": "Registra un nuevo estudiante",
                "parameters": [
                    {
                        "description": "Estudiante a registrar",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Estudiante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estudiante creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/teacher": {
            "post": {
                "description": "Registra un nuevo profesor en la base de datos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profesores"
                ],
                "summary": "Registra un nuevo profesor",
                "parameters": [
                    {
                        "description": "Profesor a registrar",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Profesor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profesor creado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/responses.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la solicitud",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.DeleteUsersInput": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "description": "Usuarios a eliminar",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.NewPublicationInput": {
            "type": "object",
            "required": [
                "contenido",
                "usuario"
            ],
            "properties": {
                "contenido": {
                    "type": "string"
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "controllers.RemoveTagInput": {
            "type": "object",
            "required": [
                "tag",
                "users"
            ],
            "properties": {
                "tag": {
                    "description": "Propiedad a eliminar",
                    "type": "string"
                },
                "users": {
                    "description": "Usuarios a etiquetar",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.SetSongRemembersInput": {
            "type": "object",
            "required": [
                "cancion",
                "me_recuerda_a",
                "usuario"
            ],
            "properties": {
                "cancion": {
                    "type": "string"
                },
                "me_recuerda_a": {
                    "type": "string"
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "controllers.SignInDetails": {
            "type": "object",
            "required": [
                "password",
                "usuario"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "controllers.TagUsersInput": {
            "type": "object",
            "required": [
                "tag",
                "users",
                "value"
            ],
            "properties": {
                "tag": {
                    "description": "Propiedad a crear",
                    "type": "string"
                },
                "users": {
                    "description": "Usuarios a etiquetar",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "description": "Valor de la propiedad",
                    "type": "boolean"
                }
            }
        },
        "models.Cancion": {
            "type": "object",
            "required": [
                "disco",
                "duracion",
                "fecha_lanzamiento",
                "genero",
                "nombre"
            ],
            "properties": {
                "disco": {
                    "type": "string"
                },
                "duracion": {
                    "type": "number"
                },
                "fecha_lanzamiento": {
                    "type": "string"
                },
                "genero": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                }
            }
        },
        "models.Carrera": {
            "type": "object",
            "required": [
                "director",
                "duracion",
                "estudiantes_registrados",
                "facultad",
                "nombre_carrera"
            ],
            "properties": {
                "director": {
                    "type": "string"
                },
                "duracion": {
                    "type": "integer"
                },
                "estudiantes_registrados": {
                    "type": "integer"
                },
                "facultad": {
                    "type": "string"
                },
                "nombre_carrera": {
                    "type": "string"
                }
            }
        },
        "models.Equipo": {
            "type": "object",
            "required": [
                "deporte",
                "division",
                "fecha_establecimiento",
                "nombre",
                "pais"
            ],
            "properties": {
                "deporte": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "fecha_establecimiento": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "pais": {
                    "type": "string"
                }
            }
        },
        "models.Estudiante": {
            "type": "object",
            "required": [
                "apellido",
                "carnet",
                "colegio",
                "correo",
                "fecha_nacimiento",
                "foraneo",
                "genero",
                "nombre",
                "parqueo",
                "password",
                "usuario"
            ],
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "carnet": {
                    "type": "string"
                },
                "colegio": {
                    "type": "string"
                },
                "conexiones": {
                    "description": "Conexiones usuarios",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "correo": {
                    "type": "string"
                },
                "fecha_nacimiento": {
                    "description": "Formato: YYYY-MM-DD",
                    "type": "string"
                },
                "foraneo": {
                    "type": "boolean"
                },
                "genero": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "parqueo": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "publicaciones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "models.Lugar": {
            "type": "object",
            "required": [
                "departamento",
                "direccion",
                "foto",
                "nombre",
                "tipo"
            ],
            "properties": {
                "departamento": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "foto": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                }
            }
        },
        "models.Persona": {
            "type": "object",
            "required": [
                "apellido",
                "fecha_nacimiento",
                "genero",
                "nombre",
                "password",
                "usuario"
            ],
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "conexiones": {
                    "description": "Conexiones usuarios",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fecha_nacimiento": {
                    "description": "Formato: YYYY-MM-DD",
                    "type": "string"
                },
                "genero": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "publicaciones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "models.Profesor": {
            "type": "object",
            "required": [
                "apellido",
                "code",
                "correo_profesor",
                "departamento",
                "fecha_nacimiento",
                "genero",
                "jornada",
                "maestria",
                "nombre",
                "password",
                "usuario"
            ],
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "conexiones": {
                    "description": "Conexiones usuarios",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "correo_profesor": {
                    "type": "string"
                },
                "departamento": {
                    "type": "string"
                },
                "fecha_nacimiento": {
                    "description": "Formato: YYYY-MM-DD",
                    "type": "string"
                },
                "genero": {
                    "type": "string"
                },
                "jornada": {
                    "type": "string"
                },
                "maestria": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "publicaciones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "models.ProfesorEstudiante": {
            "type": "object",
            "required": [
                "apellido",
                "carnet",
                "code",
                "colegio",
                "correo",
                "correo_profesor",
                "departamento",
                "fecha_nacimiento",
                "foraneo",
                "genero",
                "maestria",
                "nombre",
                "parqueo",
                "password",
                "usuario"
            ],
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "carnet": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "colegio": {
                    "type": "string"
                },
                "conexiones": {
                    "description": "Conexiones usuarios",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "correo": {
                    "type": "string"
                },
                "correo_profesor": {
                    "type": "string"
                },
                "departamento": {
                    "type": "string"
                },
                "fecha_nacimiento": {
                    "description": "Formato: YYYY-MM-DD",
                    "type": "string"
                },
                "foraneo": {
                    "type": "boolean"
                },
                "genero": {
                    "type": "string"
                },
                "jornada": {
                    "type": "string"
                },
                "maestria": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "parqueo": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "publicaciones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "models.RelationApoyaEquipo": {
            "type": "object",
            "required": [
                "equipo",
                "fecha",
                "mira_partidos",
                "por_que",
                "usuario"
            ],
            "properties": {
                "equipo": {
                    "type": "string"
                },
                "fecha": {
                    "description": "Formato: \"YYYY-MM-DD\"",
                    "type": "string"
                },
                "mira_partidos": {
                    "type": "boolean"
                },
                "por_que": {
                    "type": "string"
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "models.RelationEsSigno": {
            "type": "object",
            "required": [
                "compartir",
                "compatibilidad",
                "influencia",
                "signo",
                "usuario"
            ],
            "properties": {
                "compartir": {
                    "description": "Compartir si el usuario comparte signo con el signo",
                    "type": "boolean"
                },
                "compatibilidad": {
                    "description": "Compatibilidad Nivel de compatibilidad del signo",
                    "type": "integer"
                },
                "influencia": {
                    "description": "Influencia del signo en la vida del usuario",
                    "type": "boolean"
                },
                "signo": {
                    "description": "Signo Nombre del signo zodiacal del usuario",
                    "type": "string"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.RelationEstudiaCarrera": {
            "type": "object",
            "required": [
                "activo",
                "apasiona",
                "carrera",
                "usuario",
                "year"
            ],
            "properties": {
                "activo": {
                    "description": "Activo si el usuario está activo en la carrera",
                    "type": "boolean"
                },
                "apasiona": {
                    "description": "Apasiona si al usuario le apasiona la carrera",
                    "type": "boolean"
                },
                "carrera": {
                    "description": "Carrera Nombre de la carrera",
                    "type": "string"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                },
                "year": {
                    "description": "Year Año en el que el usuario ingresó a la carrera",
                    "type": "integer"
                }
            }
        },
        "models.RelationLeInteresaCarrera": {
            "type": "object",
            "required": [
                "carrera",
                "estudiara",
                "intereses",
                "recomendado",
                "usuario"
            ],
            "properties": {
                "carrera": {
                    "description": "Carrera Nombre de la carrera",
                    "type": "string"
                },
                "estudiara": {
                    "description": "Estudiara si el usuario estudiará la carrera",
                    "type": "boolean"
                },
                "intereses": {
                    "description": "Intereses Intereses del usuario en la carrera",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recomendado": {
                    "description": "Recomendado si al usuario le recomendaron la carrera",
                    "type": "boolean"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.RelationNoLeGustaLugar": {
            "type": "object",
            "required": [
                "categoria",
                "cuando",
                "lugar",
                "rating",
                "usuario"
            ],
            "properties": {
                "categoria": {
                    "description": "Categoria Categoria del lugar",
                    "type": "string"
                },
                "cuando": {
                    "description": "Cuando Fecha en la que el usuario visitó el lugar",
                    "type": "string"
                },
                "lugar": {
                    "description": "Lugar Nombre del lugar",
                    "type": "string"
                },
                "rating": {
                    "description": "Rating Calificación del lugar por el usuario",
                    "type": "integer"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.RelationPersonaFavoritaCancion": {
            "type": "object",
            "required": [
                "cancion",
                "como",
                "cuando",
                "frecuencia",
                "usuario"
            ],
            "properties": {
                "cancion": {
                    "description": "Cancion Nombre de la cancion",
                    "type": "string"
                },
                "como": {
                    "description": "Como Cómo la conoció",
                    "type": "string"
                },
                "cuando": {
                    "description": "Cuando Fecha en la que el usuario conoció la canción",
                    "type": "string"
                },
                "frecuencia": {
                    "description": "Frecuencia Frecuencia con la que se escucha",
                    "type": "string"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.RelationPersonaLeGustaCancion": {
            "type": "object",
            "required": [
                "cancion",
                "como",
                "escucha",
                "mas_artista",
                "usuario"
            ],
            "properties": {
                "cancion": {
                    "description": "Cancion Nombre de la cancion",
                    "type": "string"
                },
                "como": {
                    "description": "Como Cómo la conoció",
                    "type": "string"
                },
                "escucha": {
                    "description": "Escucha seguido",
                    "type": "boolean"
                },
                "mas_artista": {
                    "description": "Escucha más canciones del artista",
                    "type": "boolean"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.RelationPersonaNoLeGustaCancion": {
            "type": "object",
            "required": [
                "cambiar",
                "cancion",
                "intensidad",
                "motivo",
                "usuario"
            ],
            "properties": {
                "cambiar": {
                    "description": "Cambiar de Opinión",
                    "type": "boolean"
                },
                "cancion": {
                    "description": "Cancion Nombre de la cancion",
                    "type": "string"
                },
                "intensidad": {
                    "description": "Intensidad de disgusto",
                    "type": "integer"
                },
                "motivo": {
                    "description": "Motivo Motivo por el que no le gusta",
                    "type": "string"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.RelationRechazaEquipo": {
            "type": "object",
            "required": [
                "equipo",
                "fecha",
                "mira_partidos",
                "por_que",
                "usuario"
            ],
            "properties": {
                "equipo": {
                    "type": "string"
                },
                "fecha": {
                    "description": "Formato: \"YYYY-MM-DD\"",
                    "type": "string"
                },
                "mira_partidos": {
                    "type": "boolean"
                },
                "por_que": {
                    "type": "string"
                },
                "usuario": {
                    "type": "string"
                }
            }
        },
        "models.RelationVisitaLugar": {
            "type": "object",
            "required": [
                "categoria",
                "cuando",
                "lugar",
                "rating",
                "usuario"
            ],
            "properties": {
                "categoria": {
                    "description": "Categoria Categoria del lugar",
                    "type": "string"
                },
                "cuando": {
                    "description": "Cuando Fecha en la que el usuario visitó el lugar",
                    "type": "string"
                },
                "lugar": {
                    "description": "Lugar Nombre del lugar",
                    "type": "string"
                },
                "rating": {
                    "description": "Rating Calificación del lugar por el usuario",
                    "type": "integer"
                },
                "usuario": {
                    "description": "Usuario Nombre de usuario",
                    "type": "string"
                }
            }
        },
        "models.Signo": {
            "type": "object",
            "required": [
                "dia_semana",
                "elemento",
                "metal",
                "nombre",
                "piedra",
                "planeta"
            ],
            "properties": {
                "dia_semana": {
                    "type": "string"
                },
                "elemento": {
                    "type": "string"
                },
                "metal": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "piedra": {
                    "type": "string"
                },
                "planeta": {
                    "type": "string"
                }
            }
        },
        "responses.CareerResponse": {
            "type": "object",
            "properties": {
                "careers": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Carrera"
                    }
                },
                "message": {
                    "description": "Mensaje de la respuesta",
                    "type": "string"
                },
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Detalles específicos del error",
                    "type": "string"
                },
                "message": {
                    "description": "Mensaje de error de la respuesta",
                    "type": "string"
                },
                "status": {
                    "description": "Código de error de la respuesta",
                    "type": "integer"
                }
            }
        },
        "responses.PlacesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de la respuesta",
                    "type": "string"
                },
                "places": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Lugar"
                    }
                },
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                }
            }
        },
        "responses.SongsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de la respuesta",
                    "type": "string"
                },
                "songs": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Cancion"
                    }
                },
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                }
            }
        },
        "responses.StandardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "description": "Mensaje de la respuesta",
                    "type": "string"
                },
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                }
            }
        },
        "responses.TeamsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de la respuesta",
                    "type": "string"
                },
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                },
                "teams": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Equipo"
                    }
                }
            }
        },
        "responses.UsersResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                },
                "users": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                }
            }
        },
        "responses.ZodiacalSignResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de la respuesta",
                    "type": "string"
                },
                "status": {
                    "description": "Código de estado de la respuesta",
                    "type": "integer"
                },
                "zodiacalSign": {
                    "description": "Datos adicionales de la respuesta",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Signo"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
